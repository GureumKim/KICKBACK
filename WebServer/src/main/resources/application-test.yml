server:
  base-url: localhost

spring:
  servlet:
    # file 업로드 관련
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB




  jpa:
    open-in-view: false
    defer-datasource-initialization: true
    generate-ddl: true
    hibernate:
      ddl-auto: update   # ddl 자동 작성 여부
    properties:
      hibernate:
        format_sql: true    # 하이버네이트가 실행한 SQL을 출력할 때 보기 좋게 정렬
        use_sql_comments: true
        show_sql: true      # 하이버네이트가 실행한 SQL을 출력
        jdbc:
          batch_size: 100   #   insert/update 쿼리를 원하는 개수만큼 모아서 DB에 날릴 수 있는 옵션
        default_batch_fetch_size: 100

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/kickback?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul&zeroDateTimeBehavior=convertToNull&rewriteBatchedStatements=true
    username: ENC(leQ2apWp7C+LQ5Uc9Pz72g==)
    password: ENC(leQ2apWp7C+LQ5Uc9Pz72g==)

#  kafka:
#    listener:
#      type: batch
#    producer:
#      bootstrap-servers: localhost:9092, localhost:9093, localhost:9094
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#    consumer:
#      bootstrap-servers: localhost:9092, localhost:9093, localhost:9094
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      group-id: friendship-service
#      auto-offset-reset: earliest


  # NoSQL setting
  data:
    # Redis settings
    redis:
      host: ENC(UsR1xxhKI4mj8JX4zwDqMDBvgzaC8BfNOSjbUMm1sWY=)
      port: ENC(HkNra0un774TkFwSJkyMxA==)

  mail:
    host: smtp.gmail.com
    port: ENC(1+96J89fGfly/JdhMFYh5g==)
    username: ENC(z9jEhrfCexIwUf5r3aja9HwqRXbPCev4)
    password: ENC(rYuKRNCxSdM/Y+3xiaZ1sccNxxksipIoaOp6eLGLHEY=)
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true


jwt:
  accessKey: ENC(XgITzvZmVg0sNHxtuGT+5K8Jduv43JV6YgtX6wOaYSzpKNqTyZPEzBz8B8BWOd0531OzADxTk6ZqjCHsu/p8lr2XCHRJwyeD60joKYiILEA/tmQrnnMnsZNQ6sBAWrePqZihPCEvEGH1SqA9Gu5BHPlei50TJpa9Mf6hqsKZD2urx04oejP20i+gIrE6jbmiycca3WpiA+ke5h0naG3GrA==)
  refreshKey: (Z+ZJqRaiNGZDC9w/Q43q673gja4FJvz6qWXWdZZARO53REgmm+zWoWaVzUfkYlRhIwsuESynqkXZjRZ7bNez5swaTS9xjyWZnXLFCy7ozG3eC2Aln1rB/3Mgoc/XZAvSBK04+EMvOzIIIRAVQkznGDI+3oV3BYtFZ/ygawWoXpshdV4Mg6yVPcJM4M3im5QRuhOXLB7KWAVFkItXs3JYQQ==)
  accessExpiration: PT420M
  refreshExpiration: PT10080M

# log 관리
logging:
  level:
    org.hibernate:
      type.descriptor.sql: trace
      org.hibernate.SQLQuery: debug

app:
  # firebase
  firebase-configuration-file: ENC(O/ou07xfHw/aAsV01cl/VfIjnFGZL8iv0kBo/oa4+WM=)
  firebase-bucket: ENC(rKMT+PpnBXXJ6o5ZRQ8N0TPzAFPTl2r3VJmwK6LG0mpSdkhkQB4rNw==)
#  secret-key: ENC(ZJKlMwQzv+rNy2K0FBOz7J+37FJ50DxlBfZqhJ95DAw=)

#vault:
#  uri: http://localhost:8200
#  token: myroot
#  keyPath: secret/data/kickback
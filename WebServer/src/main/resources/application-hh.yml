server:
  base-url: localhost
  port: 8080

spring:
  servlet:
    # file 업로드 관련
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  jpa:
    open-in-view: false
    defer-datasource-initialization: true
    generate-ddl: true
    hibernate:
      ddl-auto: none   # ddl 자동 작성 여부
    properties:
      hibernate:
        format_sql: true    # 하이버네이트가 실행한 SQL을 출력할 때 보기 좋게 정렬
        use_sql_comments: true
        show_sql: true      # 하이버네이트가 실행한 SQL을 출력
        jdbc:
          batch_size: 100   #   insert/update 쿼리를 원하는 개수만큼 모아서 DB에 날릴 수 있는 옵션
        default_batch_fetch_size: 100

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${server.base-url}:3306/kickback?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul&zeroDateTimeBehavior=convertToNull&rewriteBatchedStatements=true
    username: ssafy
    password: ssafy

  # NoSQL setting
  data:
    # Redis settings
    redis:
      host: ${server.base-url}
      port: 6379

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL.USERNAME}
    password: ${MAIL.PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true


jwt:
  accessKey: TestAccessKey111111122222222223333333333333aaaaaaaaabbbbbbbbccccccccdddddddddfqwrqwfqwifjaisfjoihfoiqwflasjdglkkjasdlgjlkasdgjiowejgliasjglasjdgio
  refreshKey: TestRefreshKey111111122222222223333333333333aaaaaaaaabbbbbbbbccccccccdddddddddfqwrqwfqwifjaisfjoihfoiqwflasjdglkkjasdlgjlkasdgjiowejgliasjglasjdgio
  accessExpiration: PT420M
  refreshExpiration: PT10080M

# log 관리
logging:
  level:
    org.hibernate:
      type.descriptor.sql: trace
      org.hibernate.SQLQuery: debug

app:
  # firebase
  firebase-configuration-file: serviceAccountKey.json
  firebase-bucket: testset-58839.appspot.com